{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}; // // getServerSideProps for needeing req and res\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch API\n//   return {\n//     props: {meetups: DUMMY}\n//   }\n// };\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups === null || meetups === void 0 ? void 0 : meetups.map(meetup => {\n        return {\n          title: meetup.title,\n          address: meetup.address,\n          image: meetup.image,\n          id: meetup._id.toString()\n        };\n      })\n    },\n    revalidate: 1\n  };\n}\n; // export async function getStaticProps() {\n//   const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n//     const db = client.db();\n//     const meetupsCollection = db.collection('meetups');\n//     const meetups = meetupsCollection.find().toArray();\n//     console.log(meetups);\n//     client.close();\n//   return {\n//     props: {\n//       meetups: meetups?.map(meetup => {\n//        return {\n//          title: meetup.title,\n//          address: meetup.address,\n//          image: meetup.image,\n//          id: meetup._id.toString()\n//        } \n//       })\n//     },\n//     revalidate: 1,\n//   };\n// };\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/index.js"],"names":["MeetupList","MongoClient","Head","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO;AAAA,4BACP,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADO,eAIP,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJO;AAAA,kBAAP;AAMD,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,gGAApB,CAArB;AACE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEF,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,GAAT,CAAaC,MAAM,IAAI;AACvB,eAAO;AACLC,UAAAA,KAAK,EAAED,MAAM,CAACC,KADT;AAELC,UAAAA,OAAO,EAAEF,MAAM,CAACE,OAFX;AAGLC,UAAAA,KAAK,EAAEH,MAAM,CAACG,KAHT;AAILC,UAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJC,SAAP;AAMA,OAPA;AADJ,KADF;AAWLC,IAAAA,UAAU,EAAE;AAXP,GAAP;AAaD;AAAA,C,CAED;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAepB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head';\n\nconst HomePage = (props) => {\n  return <>\n  <Head>\n    <title>React Meetups</title>\n  </Head>\n  <MeetupList meetups={props.meetups}/>   \n  </>\n};\n\n// // getServerSideProps for needeing req and res\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch API\n//   return {\n//     props: {meetups: DUMMY}\n//   }\n// };\n\nexport async function getStaticProps() {\n  \n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find().toArray();\n\n    client.close();\n\n  return {\n    props: {\n      meetups: meetups?.map(meetup => {\n               return {\n                 title: meetup.title,\n                 address: meetup.address,\n                 image: meetup.image,\n                 id: meetup._id.toString()\n               } \n              })\n    },\n    revalidate: 1,\n  };\n};\n\n// export async function getStaticProps() {\n  \n//   const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n//     const db = client.db();\n\n//     const meetupsCollection = db.collection('meetups');\n\n//     const meetups = meetupsCollection.find().toArray();\n//     console.log(meetups);\n//     client.close();\n\n//   return {\n//     props: {\n//       meetups: meetups?.map(meetup => {\n//        return {\n//          title: meetup.title,\n//          address: meetup.address,\n//          image: meetup.image,\n//          id: meetup._id.toString()\n//        } \n//       })\n//     },\n//     revalidate: 1,\n//   };\n// };\n\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}