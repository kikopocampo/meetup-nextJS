{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Head from 'next/head';\n\nconst MeetupDetails = props => {\n  const data = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: data.image,\n      title: data.title,\n      address: data.address,\n      description: data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\n;\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close(); // console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetups._id.toString(),\n        title: selectedMeetups.title,\n        address: selectedMeetups.address,\n        image: selectedMeetups.image,\n        description: selectedMeetups.description\n      }\n    }\n  };\n}\n;\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","MeetupDetails","props","data","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetups","findOne","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,SAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,UAAnB;AACA,sBAAO;AAAA,2BACP,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAFd;AAGE,MAAA,OAAO,EAAEH,IAAI,CAACI,OAHhB;AAIE,MAAA,WAAW,EAAEJ,IAAI,CAACK;AAJpB;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AAOD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,gGAApB,CAArB;AACE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEF,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC5BC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AADqB,KAAL,CAAlB;AAFF,GAAP;AAMD;AAAA;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,gGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,eAAe,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AAAd,GAA1B,CAA9B;AAEAf,EAAAA,MAAM,CAACS,KAAP,GAV6C,CAY7C;;AAEA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE;AACV2B,QAAAA,EAAE,EAAEF,eAAe,CAACZ,GAAhB,CAAoBS,QAApB,EADM;AAEVpB,QAAAA,KAAK,EAAEuB,eAAe,CAACvB,KAFb;AAGVC,QAAAA,OAAO,EAAEsB,eAAe,CAACtB,OAHf;AAIVF,QAAAA,KAAK,EAAEwB,eAAe,CAACxB,KAJb;AAKVG,QAAAA,WAAW,EAAEqB,eAAe,CAACrB;AALnB;AADP;AADF,GAAP;AAYD;AAAA;AAED,eAAeP,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient, ObjectId} from 'mongodb';\nimport Head from 'next/head';\n\n\nconst MeetupDetails = (props) => {\n  const data = props.meetupData;\n  return <>\n  <MeetupDetail \n    image={data.image}\n    title={data.title}\n    address={data.address}\n    description={data.description}/>\n  </>\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params:{meetupId: meetup._id.toString()}\n    })),\n  };\n};\n\nexport async function getStaticProps (context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetups = await meetupsCollection.findOne({_id: ObjectId(meetupId)});\n\n  client.close();\n\n  // console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetups._id.toString(),\n        title: selectedMeetups.title,\n        address: selectedMeetups.address,\n        image: selectedMeetups.image,\n        description: selectedMeetups.description\n\n      },\n    }\n  }\n};\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}