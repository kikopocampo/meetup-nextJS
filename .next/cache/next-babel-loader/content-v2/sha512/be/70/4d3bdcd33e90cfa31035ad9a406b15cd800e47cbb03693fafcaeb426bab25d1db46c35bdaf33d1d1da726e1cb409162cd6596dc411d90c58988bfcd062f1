{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  const data = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: data.image,\n      title: data.title,\n      address: data.address,\n      descriptipn: data.descriptipn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  });\n  client.close();\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }, {\n      params: {\n        meetupId: 'm2'\n      }\n    }]\n  };\n}\n;\nexport async function getStaticProps(context) {\n  //fetch data for one meetup\n  const meetupId = context.params.meetupId; // console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://upload.wikimedia.org/wikipedia/commons/0/06/Manila_Cathedral_Facade_at_Sunset.jpg\",\n        title: \"A first meetup\",\n        address: \"Test address\",\n        descriptipn: \"Meetup Description\"\n      }\n    }\n  };\n}\n;\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","data","meetupData","image","title","address","descriptipn","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","close","fallback","paths","params","meetupId","getStaticProps","context","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,UAAnB;AAEA,sBAAO;AAAA,2BACP,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,IAAI,CAACE,KADd;AAEE,MAAA,KAAK,EAAEF,IAAI,CAACG,KAFd;AAGE,MAAA,OAAO,EAAEH,IAAI,CAACI,OAHhB;AAIE,MAAA,WAAW,EAAEJ,IAAI,CAACK;AAJpB;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AAOD,CAXD;;AAaA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAAoB,gGAApB,CAArB;AACE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,CAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEF,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AAAV,KADK,EAIL;AAAED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AAAV,KAJK;AAFF,GAAP;AAWD;AAAA;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAC7C;AAEA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC,CAH6C,CAI7C;;AAEA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE;AACVqB,QAAAA,EAAE,EAAEH,QADM;AAEVjB,QAAAA,KAAK,EAAE,2FAFG;AAGVC,QAAAA,KAAK,EAAE,gBAHG;AAIVC,QAAAA,OAAO,EAAE,cAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP;AADF,GAAP;AAWD;AAAA;AAED,eAAeP,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient} from 'mongodb';\nconst MeetupDetails = (props) => {\n\n  const data = props.meetupData;\n\n  return <>\n  <MeetupDetail \n    image={data.image}\n    title={data.title}\n    address={data.address}\n    descriptipn={data.descriptipn}/>\n  </>\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1});\n\n    client.close();\n\n  return {\n    fallback: false,\n    paths: [\n      { params: {\n          meetupId: 'm1',\n      } },\n      { params: {\n          meetupId: 'm2',\n      } },\n    ]\n  }\n};\n\nexport async function getStaticProps (context) {\n  //fetch data for one meetup\n\n  const meetupId = context.params.meetupId;\n  // console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://upload.wikimedia.org/wikipedia/commons/0/06/Manila_Cathedral_Facade_at_Sunset.jpg\",\n        title: \"A first meetup\",\n        address: \"Test address\",\n        descriptipn: \"Meetup Description\",\n      }\n    }\n  }\n};\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}