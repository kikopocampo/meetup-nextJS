{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.log(props.meetupData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      descriptipn: props.descriptipn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }, _this)\n  }, void 0, false);\n};\n\n_c = MeetupDetails;\n;\n;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/kikoocampo/Documents/lighthouse-react/Udemy-react/next-project-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log","meetupData","image","title","address","descriptipn"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,sBAAO;AAAA,2BACP,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACI,KADf;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACK,KAFf;AAGE,MAAA,OAAO,EAAEL,KAAK,CAACM,OAHjB;AAIE,MAAA,WAAW,EAAEN,KAAK,CAACO;AAJrB;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AAOD,CATD;;KAAMR,a;AA2BL;AAqBA;;AAED,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport {MongoClient} from 'mongodb';\nconst MeetupDetails = (props) => {\n  console.log(props.meetupData)\n  return <>\n  <MeetupDetail \n    image={props.image}\n    title={props.title}\n    address={props.address}\n    descriptipn={props.descriptipn}/>\n  </>\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params:{meetupId: meetup._id.toString()}\n    })),\n  };\n};\n\nexport async function getStaticProps (context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect('mongodb+srv://kiko:foiegras25@cluster0.a7gxmqk.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetups = await meetupsCollection.findOne({_id: meetupId});\n\n  client.close();\n\n  // console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: selectedMeetups,\n    }\n  }\n};\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}